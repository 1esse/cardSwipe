/*
 * @Author: jesse zhao 
 * @Date: 2020-04-07 02:41:53 
 * @Last Modified by: jesse zhao
 * @Last Modified time: 2020-04-07 02:43:44
 * @github: https://github.com/1esse/cardSwipe
 */
var SLIDE_THRESHOLD = 0 // 松手后滑出界面阈值
var CONTEXT_WIDTH = 0 // 组件宽度
var instance = {} // 卡片实例
var startX = 0 // 手指刚接触时屏幕X轴位置
var moveX = 0 // 移动距离
var cardIndex = 0 // 滑动卡片的层级索引
var cardZindex = 0 // 滑动卡片的层级索引
var currentCursor = 0 // 当前最上层卡片索引
var lock = false

function init(newp, oldp, ownerinstance, inst) {
    if (!newp) return
    CONTEXT_WIDTH = newp
    instance = inst
    var dataset = instance.getDataset()
    SLIDE_THRESHOLD = dataset.slideThershold
}

function touchstart(event, ownerinstance) {
    if (lock) return
    lock = true
    instance = event.instance
    var dataset = instance.getDataset()
    cardIndex = dataset.cardIndex
    cardZindex = dataset.cardZindex
    currentCursor = dataset.currentCursor
    startX = event.touches[0].clientX
    instance.setStyle({
        "transition": "unset"
    })
}

function touchmove(event, ownerinstance) {
    if (!lock) return
    if (!instance || !startX || cardIndex !== currentCursor) {
        lock = false
        return
    }
    var clientX = event.touches[0].clientX
    moveX = clientX - startX
    instance.setStyle({
        "transition": "unset",
        "transform": "translate3d(" + moveX + "px, 0, " + cardZindex + "px)",
    })
}

function touchend(event, ownerinstance) {
    if (!lock) return
    if (cardIndex !== currentCursor) {
        lock = false
        return
    }
    instance.setStyle({
        "transform": Math.abs(moveX) < SLIDE_THRESHOLD ?
            "translate3d(0, 0, " + cardZindex + "px)" :
            "translate3d(" + (moveX > 0 ? CONTEXT_WIDTH : -CONTEXT_WIDTH) + "px, 0, " + cardZindex + "px)",
        "transition": "all ease 0.2s",
    })
    Math.abs(moveX) >= SLIDE_THRESHOLD && ownerinstance.callMethod('nextCard', {
        direction: moveX > 0 ? 'right' : 'left'
    })
    lock = false
    startX = 0
    moveX = 0
}

var func_cache = ['key', 'val'] // wxml页多地方调用该函数，使用缓存来缓解压力
function circleRange(index, current_cursor, showCards, total, removedCards, symbol) {
    if (showCards > total || current_cursor === undefined) return
    var key = current_cursor.toString() + showCards.toString() + total.toString() + removedCards.toString()
    var range = []
    if (key === func_cache[0]) {
        range = func_cache[1]
    }
    else {
        var i = current_cursor
        while (range.length < showCards) {
            removedCards.indexOf(i) === -1 && range.push(i)
            i += 1
            if (i === total) i = 0
        }
        func_cache = [key, range]
    }
    switch (symbol) {
        case 'in':
            return range.indexOf(index) >= 0
        case 'loc':
            return range.indexOf(index)
    }
}

function getNextRemoves(removedCards, current_cursor) {
    return removedCards.filter(function (item) {
        return item > current_cursor
    })
}

module.exports = {
    init: init,
    touchstart: touchstart,
    touchmove: touchmove,
    touchend: touchend,
    circleRange: circleRange,
    getNextRemoves: getNextRemoves
}